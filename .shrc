# This file is executed by POSIX sh for interactive shells
# (assuming ENV is set to this file).

. color.sh
PS1="${RESET}${GREEN}$USER${RESET}@${GREEN}$(uname -n)${RESET} $ "

# TTY settings
if tty >/dev/null 2>&1; then
    stty tostop
    # This is used by gpg-agent to pass ttyname to pinentry.
    export GPG_TTY=$(tty)
fi

# Colors
if command -v dircolors >/dev/null 2>&1; then
    if [ -r ~/.dircolors ]; then
        eval "$(dircolors -b ~/.dircolors)"
    else
        eval "$(dircolors -b)"
    fi
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

case "$TERM" in
    'xterm')
        # xterm always sets TERM=xterm even if it was compiled with
        # 256 color support.
        # Most xterms are compiled with 256 color, so check
        # XTERM_VERSION which probably means we are actually in a
        # recent-ish xterm.
        [ -n "${XTERM_VERSION:-}" ] && TERM=xterm-256color
        ;;
    ''|dumb*)
        # Disable pagers
        export PAGER=
        export GIT_PAGER=
        export SYSTEMD_PAGER=
        ;;
esac

# Set up SSH_AUTH_SOCK unless it's already set.
[ -z "${SSH_AUTH_SOCK}" ] && export SSH_AUTH_SOCK=$XDG_RUNTIME_DIR/ssh-agent.socket

# Aliases
alias a="animanager"
alias aa="animanager add"
aar() {
    animanager add "$@"
    animanager register "$@"
}
alias areg="animanager register"
alias as="animanager search"
at() (
    x=$1
    shift 1
    systemd-run --user --on-active="${x}" --timer-property=AccuracySec=100ms "${@}"
)
alias auc="autorandr -c"
alias aw="animanager watch"
alias awb="animanager watchable"
alias ec="emacsclient"
alias ecnw="emacsclient -nw"
alias engi="env | grep -i"
alias g="git"
alias gati="gapi-tokeninfo"
alias gga="go generate ./..."
alias ggua="go get -u ./..."
alias gia="go install ./..."
alias gmt="go mod tidy"
alias gta="go test ./..."
alias jrn="journalctl"
alias jrnu="journalctl --user"
alias la="ls -A"
alias ll="ls -Al"
alias mkd="mkdir -pv"
mkdc() {
    mkdir -pv $1
    cd $1
}
alias netctl="sudo netctl"
alias pac="sudo pacman"
alias path='printf "%s\n" "$PATH" | sed "s/:/\n/g"'
alias psef="ps -ef"
alias psefg="ps -ef | grep"
alias s="sudo"
alias tpr="tput reset"

# systemctl aliases
defalias_sys() {
    eval "alias sys$1=\"systemctl $2\""
    eval "alias sysu$1=\"systemctl --user $2\""
}
defalias_sys "" ""
defalias_sys d "disable"
defalias_sys dn "disable --now"
defalias_sys dr "daemon-reload"
defalias_sys e "enable"
defalias_sys en "enable --now"
defalias_sys r "restart"
unset -f defalias_sys

# Local Variables:
# sh-shell: sh
# End:
